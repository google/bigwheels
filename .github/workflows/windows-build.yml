name: Windows build

on:
  pull_request:

# Cancel previous runs if a more recent commit is pushed.
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

permissions: read-all

jobs:
  windows-build:
    name: Build and run unit tests on Windows
    runs-on: "windows-2019"
    steps:
      - name: Setup Windows SDK
        uses: GuillaumeFalourd/setup-windows10-sdk-action@v1.11
        with:
          sdk-version: 22621
      - name: Setup Vulkan SDK
        run: |
          Start-BitsTransfer -Source https://sdk.lunarg.com/sdk/download/1.3.216.0/windows/VulkanSDK-1.3.216.0-Installer.exe
          .\VulkanSDK-1.3.216.0-Installer.exe install --accept-licenses --default-answer --confirm-command --root "$HOME\vulkan-sdk"
          "VULKAN_SDK=${HOME}\vulkan-sdk" >> $env:GITHUB_ENV

          # Get the vulkan-1.dll and add it to the PATH, which is required when we execute binaries.
          Start-BitsTransfer -Source https://sdk.lunarg.com/sdk/download/1.3.216.0/windows/VulkanRT-1.3.216.0-Components.zip
          Expand-Archive VulkanRT-1.3.216.0-Components.zip -DestinationPath "$HOME\vulkan-sdk\RTComponents"
          "$HOME\vulkan-sdk\RTComponents\VulkanRT-1.3.216.0-Components\x64" >> $env:GITHUB_PATH
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: Switch to pull request branch and clone submodules
        run: |
          git checkout ${GITHUB_SHA}
          git submodule update --init --recursive
      - name: Build
        run: |
          mkdir build
          cd build
          cmake -G "Visual Studio 16 2019" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -DPPX_BUILD_TESTS=ON -DPPX_BUILD_XR=1 ..

          # We only build DX12 projects since there is no benefit in building
          # the targets for other APIs unless we're running them.
          # We also build all shaders targets, irrespective of the API, to
          # ensure shader compilation succeeds.

          # TODO(https://github.com/google/bigwheels/issues/97): an issue around duplicated targets
          # requires us to build shader targets with a single core.
          cmake --build . --target all-shaders --config Release -- /nologo /verbosity:minimal /maxcpucount:1
          cmake --build . --target all-dx12 build-tests --config Release -- /nologo /verbosity:minimal /maxcpucount
      - name: Run unit tests
        run: |
          cd build
          cmake --build . --target RUN_TESTS --config Release -- /nologo /verbosity:minimal /maxcpucount
      - name: Run runtime tests
        run: |
          cd build\bin\Release

          .\dx12_03_square_textured --headless --frame-count 2 --screenshot-frame-number 1
          magick convert screenshot_frame1.ppm dx12_03_square_textured_screenshot.png

          .\dx12_09_obj_geometry --headless --frame-count 2 --screenshot-frame-number 1
          magick convert screenshot_frame1.ppm dx12_09_obj_geometry_screenshot.png

          .\dx12_13_normal_map --headless --frame-count 2 --screenshot-frame-number 1
          magick convert screenshot_frame1.ppm dx12_13_normal_map_screenshot.png

          .\dx12_fishtornado --headless --frame-count 2 --screenshot-frame-number 1
          magick convert screenshot_frame1.ppm dx12_fishtornado_screenshot.png
      - name: Upload screenshots
        uses: actions/upload-artifact@v3
        with:
          name: screenshots
          path: build\bin\Release\*.png
